{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Filter","value","onChange","className","s","filterWrapper","type","filterInput","prototype","PropTypes","string","func","isRequired","ContactForm","state","name","number","id","handleChange","e","currentTarget","setState","uuidv4","handleSubmit","preventDefault","props","onSubmit","reset","this","form","input","pattern","title","required","btn","Component","ContactListItem","contact","onDeleteContact","contactItem","btnDel","onClick","shape","ContactList","visibleContacts","contactList","map","array","App","contacts","filter","submitFromForm","data","find","alert","newContactsArray","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","deleteContact","prevState","onVisibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b529d8c9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1AIl9\",\"input\":\"ContactForm_input__32ZBt\",\"btn\":\"ContactForm_btn__1WAEI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2z7Rg\",\"filterInput\":\"Filter_filterInput__3FzHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__icHTs\",\"btnDel\":\"ContactListItem_btnDel__20zAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2EQPi\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className={s.filterWrapper}>\r\n    <label>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        className={s.filterInput}\r\n      />\r\n    </label>\r\n  </div>\r\n);\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    id: null,\r\n  };\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value, id: uuidv4() });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ contact, onDeleteContact }) => {\r\n  return (\r\n    <li className={s.contactItem}>\r\n      {contact.name}: {contact.number}\r\n      <button\r\n        type=\"button\"\r\n        className={s.btnDel}\r\n        onClick={() => onDeleteContact(contact.id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactListItem.prototype = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactListItem;\r\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ visibleContacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={s.contactList}>\r\n      {visibleContacts.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          onDeleteContact={onDeleteContact}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.prototype = {\r\n  visibleContacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Filter from './components/Filter';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  submitFromForm = data => {\n    const { name } = data;\n    const { contacts } = this.state;\n    const nameAlreadyIs = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n\n    if (nameAlreadyIs) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContactsArray = [...contacts, data];\n\n    this.setState({ contacts: newContactsArray });\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    const newContactsArr = contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return newContactsArr;\n  };\n\n  deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n  render() {\n    const onVisibleContacts = this.getVisibleContacts();\n    const { filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.submitFromForm} />\n        <h2> Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          visibleContacts={onVisibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}